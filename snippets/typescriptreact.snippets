# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet rse "Styled Component Export" b
import styled from 'styled-components'

const ${1:`!v expand('%:t:r')`} = styled.${2:div}\`
	$3
\`

export default $1
endsnippet



snippet rss "Styled Component" b
${1:export} const ${2:`!v expand('%:t:r')`Style} = styled.${3:div}\`$4\`
endsnippet

snippet rsce "Styled Component Export 'Styled' " b
import styled from 'styled-components'

const ${1:`!v expand('%:t:r')`Style} = styled.${2:div}\`$3\`

export default $1
endsnippet


snippet the "Styled Component Theme" i
  ${({ theme }) => theme.$1 };
endsnippet

snippet ato "Atom Recoil" b
import { atom } from 'recoil'
const ${1:`!v expand('%:t:r')`Store} = atom({
   key: "${2:`!v expand('%:t:r')`}",
   default: ${3: hello},
  }
)
export default $1
endsnippet

snippet epd "Export Default " b

export default ${1:`!v expand('%:t:r')`} 
endsnippet



